define
{
  XR_MARMALADE
}

includepath h/XR

options
{
  lib
}

subproject
{
  xr3

  iwgx
  iwutil
  iwresmanager
  iwhttp

  tinyxml
}

files
{
  xr3.mkf

  [src]
  (h/XR)
  AABB.cpp
  ActorInstance.cpp
  ActorReader.cpp
  Animation.cpp
  AnimationInstance.cpp
  AnimationPlayer.cpp
  AnimationReader.cpp
  Application.cpp
  BasicMesh.cpp
  Callback.cpp
  Camera.cpp
  Color.cpp
  CrossObject.cpp
  CSV.cpp
  debugdraw.cpp
  DelayedCallback.cpp
  Entity.cpp
  EventDispatcher.cpp
  FileBuffer.cpp
  Font.cpp
  fundamentals.cpp
  Grid.cpp
  Hash.cpp
  Indexer2d.cpp
  IndexMesh.cpp
  json.cpp
  JsonEntity.cpp
  JsonParser.cpp
  JsonReader.cpp
  JsonWriter.cpp
  Log.cpp
  maths.cpp
  MersenneTwister.cpp
  MeshRenderer.cpp
  Module.cpp
  MouseHandler.cpp
  Name.cpp
  Parse.cpp
  ParserCore.cpp
  ProjectionHelpers.cpp
  Pool.cpp
  Quadtree.cpp
  Ray.cpp
  RectObject.cpp
  RenderStreamIO.cpp
  RingBuffer.cpp
  Serialized.cpp
  SharedPoolAllocator.cpp
  Sprite.cpp
  SpriteRenderer.cpp
  State.cpp
  Text.cpp
  TexturePack.cpp
  TweakBench.cpp
  Tweener.cpp
  TweenVar.cpp
  TweenVarPool.cpp
  UIID.cpp
  utils.cpp
  vectypes.cpp

  (h/XR/Marmalade)
  Adpcm.cpp
  Adpcm.hpp
  Audio.cpp
  AudioChannelState.cpp
  AudioChannelState.hpp
  Device.cpp
  File.cpp
  HttpClient.cpp
  Image.cpp
  Input.cpp
  KeyCode.cpp
  Material.cpp
  MouseButton.cpp
  Renderer.cpp
  RenderStream.cpp
  Sample.cpp
  SampleData.cpp
  SampleData.hpp
  Texture.cpp
  Timer.cpp
  Worker.cpp
}
